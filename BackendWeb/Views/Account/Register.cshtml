@using Microsoft.AspNet.Identity.EntityFramework
@using DBClassLibrary.DomainLayer.UnitModel
@model BackendWeb.Models.RegisterViewModel
@{
    ViewBag.Title = (User.Identity.IsAuthenticated ? "建立新的帳戶" : "註冊新的帳戶");
    var unitList = (List<SelectListItem>)TempData["UnitList"];
    var roleList = (List<SelectListItem>)TempData["RoleList"];
    TempData.Keep();
}

<div class="page-body">
    <div class="container-xl">

        @if (User.Identity.IsAuthenticated)
        {
            <h3>建立新的帳戶 :</h3>
        }
        else
        {
            <h3>註冊新的帳戶 :</h3>
        }

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", id = "formInput", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "alert-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.Email, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RealName, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.RealName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RealName, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UnitID, htmlAttributes: new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.DropDownListFor(m => m.UnitID, unitList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UnitID, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.SubUnit, htmlAttributes: new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.SubUnit, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Title, new { @class = "col-md-1 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                @if (User.Identity.IsAuthenticated)
                {
                    @Html.LabelFor(m => m.RoleName, htmlAttributes: new { @class = "col-md-1 control-label" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(m => m.RoleName, roleList, "請選擇", htmlAttributes: new { @class = "form-control" })
                    </div>
                }
            </div>

            <div class="tw-block-btn">
                <input type="submit" class="btn btn-primary" value="@(User.Identity.IsAuthenticated ? "新增" : "註冊")" />
                @if (User.Identity.IsAuthenticated)
                {
                    @Html.ActionLink("取消", "Index", "User", null, new { @class = "btn btn-default" })
                }
                else
                {
                    @Html.ActionLink("取消", "Index", "Home", null, new { @class = "btn btn-default" })
                }
            </div>

        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(":submit").on("click", function () {
                if ($("#formInput").valid()) {
                    TW.blockUI();
                }
            });
        });
    </script>
}
